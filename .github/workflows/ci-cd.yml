name: Backend CI/CD

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Configure SSH
      env:
        SSH_PRIVATE_KEY: ${{ secrets.EC2_PEM_KEY }}
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/ec2_key.pem
        chmod 600 ~/.ssh/ec2_key.pem
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
        ssh-keyscan -H ${{ secrets.EC2_HOST2 }} >> ~/.ssh/known_hosts
        
    - name: Deploy to EC2-1
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
      run: |
        ssh -i ~/.ssh/ec2_key.pem $EC2_USER@$EC2_HOST '
          cd program/phrasewave-backend/
          git pull origin main
          docker system prune -a -f
          [ -f sail ] && bash sail down || bash vendor/bin/sail down
          [ -f sail ] && bash sail up -d --build || bash vendor/bin/sail up -d --build
          [ -f sail ] && bash sail artisan migrate --force || bash vendor/bin/sail artisan migrate --force
          [ -f sail ] && bash sail composer install --no-dev --optimize-autoloader || bash vendor/bin/sail composer install --no-dev --optimize-autoloader
        '
        
    - name: Deploy to EC2-2
      env:
        EC2_HOST2: ${{ secrets.EC2_HOST2 }}
        EC2_USER: ${{ secrets.EC2_USER }}
      run: |
        ssh -i ~/.ssh/ec2_key.pem $EC2_USER@$EC2_HOST2 '
          cd program/phrasewave-backend/
          git pull origin main
          docker system prune -a -f
          [ -f sail ] && bash sail down || bash vendor/bin/sail down
          [ -f sail ] && bash sail up -d --build || bash vendor/bin/sail up -d --build
          [ -f sail ] && bash sail artisan migrate --force || bash vendor/bin/sail artisan migrate --force
          [ -f sail ] && bash sail composer install --no-dev --optimize-autoloader || bash vendor/bin/sail composer install --no-dev --optimize-autoloader
        '
#   rebuild test
#   test:
#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v3
#     - name: Set up PHP
#       uses: shivammathur/setup-php@v2
#       with:
#         php-version: '8.2'
    
#     - name: Install Composer dependencies
#       run: composer install --prefer-dist --no-progress
    
#     - name: Run tests
#       run: vendor/bin/phpunit
